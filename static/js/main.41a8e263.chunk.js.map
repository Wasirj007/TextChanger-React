{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","Fragment","style","height","alert","class","concat","type","role","msg","data-bs-dismiss","aria-label","About","MyStyle","color","mode","backgroundColor","className","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","href","title","AboutText","onClick","RedMode","htmlFor","buttontext","toggleMode","btntext","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","placeholder","value","onChange","event","target","rows","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","data-toggle","data-placement","element","document","area","getElementById","file","Blob","URL","createObjectURL","download","body","appendChild","click","all","navigator","clipboard","writeText","classList","toggle","extra","split","join","filter","defaultProps","App","setmode","_useState3","_useState4","setbtntext","_useState5","_useState6","setbuttontext","_useState7","_useState8","setalert","message","setTimeout","react_router_dom","react_router","path","process","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.41a8e263.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n    return (\r\n        <>\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.msg}</strong>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>}\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n    let MyStyle={\r\n        color: props.mode==='dark' ? 'white' : props.mode==='danger' ? 'white' : 'black' ,\r\n        backgroundColor: props.mode==='dark' ? 'rgb(36 74 104)' : props.mode==='danger' ? '#e54b4b' : 'white'\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode==='dark' ? 'white' : props.mode==='danger' ? 'white' : 'black'}}>\r\n                <h1>About Us</h1>\r\n                <div className=\"accordion\" id=\"accordionExample\" style={MyStyle}>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\" style={MyStyle}>\r\n                            <button className=\"accordion-button\" style={MyStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                <b> Analyze your text</b>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={MyStyle}>\r\n                                TextChanger gives you a way to analyze your text quickly and efficiently\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" style={MyStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                <b>Free to use</b>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={MyStyle}>\r\n                                TextChanger is a free character counter tool that provides instant character count & word count statics for a given text. TextChanger reports the number of words and characters. Thus it is suitable for writing text with words/characters limit.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" style={MyStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                <b>Browser Compatible</b>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={MyStyle}>\r\n                                This web counter software works in any browser such as Chrome,Firewall,Opera,Internet Explorer etc. It suits to count characters in Facebook,Blog,books,excel documents,pdf documnet,essays etc.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <a className={`navbar-brand ml-2 text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"/home\" >{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className={`nav-link text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"/home\">Home<span className=\"sr-only\">(current)</span></a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"/about\">{props.AboutText}</a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.RedMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label mr-3\" htmlFor=\"flexSwitchCheckDefault\">{props.buttontext}</label>\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label mr-3\" htmlFor=\"flexSwitchCheckDefault\">{props.btntext}</label>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n//   propTypes\r\nNavbar.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  AboutText: propTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Company Name',\r\n  AboutText: 'About My Company'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState('')\r\n  const handleupClick = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext)\r\n    props.showAlert(\"Converted to Uppercase\" , \"primary\")\r\n  }\r\n  const handlelowClick = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext)\r\n    props.showAlert(\"Converted to Lowercase\" , \"primary\")\r\n  }\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n  const handleClear = () => {\r\n    setText(\"\")\r\n    props.showAlert(\"Text is cleared\" , \"primary\")\r\n  }\r\n  const handledownload = () => {\r\n    let element = document.createElement(\"a\")\r\n    let area = document.getElementById(\"mybox\").value\r\n    const file = new Blob([area], {\r\n      type: \"text/plain\" \r\n    });\r\n    element.href = URL.createObjectURL(file)\r\n    element.download = \"myfile.txt\"\r\n    document.body.appendChild(element)\r\n    element.click()\r\n    props.showAlert(\"File is downloaded\" , \"primary\")\r\n  }\r\n  const handleCopy = () => {\r\n    let all = document.getElementById(\"mybox\").value\r\n    navigator.clipboard.writeText(all);\r\n    let popup = document.getElementById(\"forpopup\");\r\n    popup.classList.toggle(\"show\");\r\n  }\r\n  const handleSpace = () => {\r\n    let extra = text.split(/[ ]+/)\r\n    setText(extra.join(\" \"))\r\n    props.showAlert(\"Extra spaces are removed\" , \"primary\")\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <h1 style={{ color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black'}}>{props.heading}</h1>\r\n      <div className=\"form-group mt-5\" style={{ color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black' }}>\r\n        <textarea placeholder=\"Enter any text\" className=\"form-control\" style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : props.mode === 'danger' ? '#C0392B' : 'white', color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black'}} value={text} onChange={handleOnChange} id=\"mybox\" rows=\"9\"></textarea>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary' && props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handleupClick}>Convert to UpperCase</button>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary' && props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handlelowClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handleClear}>Clear All</button>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download file\" onClick={handledownload}>Download</button>\r\n        <button disabled={text.length===0} id='popup' className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy\" onClick={handleCopy}>Copy\r\n          <span className='popuptext' id='forpopup'>Copied!</span>\r\n        </button>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handleSpace}>Remove Extra Spaces</button>\r\n\r\n      </div>\r\n\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black' }}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element) => element !== \"\").length} words and {text.length} characters </p>\r\n        <p>{0.008 * text.split(\"\").filter((element) => element !== \"\").length} minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter in textBox above to preview here\"}</p>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React,{useState}  from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [btntext, setbtntext] = useState(\"Light Mode\")\n  const [buttontext, setbuttontext] = useState(\"Light Mode\")\n  const [alert, setalert] = useState(null)\n  const showAlert = (message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 3000);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark')\n      document.body.style.backgroundColor = '#042743';\n      setbtntext(\"Dark Mode\")\n      showAlert(\"Dark mode enables\", \"light\")\n    }\n    \n    else{\n      setmode('light')\n      setbtntext(\"Light Mode\")\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enables\", \"dark\")\n    }\n  }\n\n  const RedMode=()=>{\n    if(mode==='light'){\n      setmode('danger')\n      document.body.style.backgroundColor = '#C0392B';\n      setbuttontext(\"Red Mode\")\n      showAlert(\"Red mode enables\", \"light\")\n    }\n    \n    else{\n      setmode('light')\n      setbuttontext(\"Light Mode\")\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enables\", \"dark\")\n    }\n  }\n\n\n  return (\n    <>\n    <BrowserRouter>\n      <Navbar title=\"Text Changer\" AboutText=\"About Us\" mode={mode} RedMode={RedMode} toggleMode={toggleMode} btntext={btntext} buttontext={buttontext}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Switch>\n        <Route path={process.env.PUBLIC_URL + '/home'}>\n        <Textform showAlert={showAlert} heading=\"Enter your text to analyze below\" mode={mode} />\n      </Route>\n      <Route path={process.env.PUBLIC_URL + '/about'}>\n      <About mode={mode} />\n      </Route>\n      </Switch> \n      </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}