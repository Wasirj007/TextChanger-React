{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","class","concat","type","role","msg","data-bs-dismiss","aria-label","Navbar","Fragment","className","mode","href","title","data-toggle","data-target","aria-controls","aria-expanded","id","onClick","RedMode","htmlFor","buttontext","toggleMode","btntext","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","placeholder","backgroundColor","value","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","data-placement","element","document","area","getElementById","file","Blob","URL","createObjectURL","download","body","appendChild","click","all","navigator","clipboard","writeText","classList","toggle","extra","split","join","filter","t","length","defaultProps","AboutText","App","setmode","_useState3","_useState4","setbtntext","_useState5","_useState6","setbuttontext","_useState7","_useState8","setalert","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.92ed3cbc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n    return (\r\n            props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.msg}</strong>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <a className={`navbar-brand ml-2 text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"\" >{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className={`nav-link text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"\">Home<span className=\"sr-only\">(current)</span></a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className={`nav-link text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"/about\">{props.AboutText}</a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.RedMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label mr-3\" htmlFor=\"flexSwitchCheckDefault\">{props.buttontext}</label>\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label mr-3\" htmlFor=\"flexSwitchCheckDefault\">{props.btntext}</label>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n//   propTypes\r\nNavbar.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  AboutText: propTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Company Name',\r\n  AboutText: 'About My Company'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState('')\r\n  const handleupClick = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext)\r\n    props.showAlert(\"Converted to Uppercase\" , \"primary\")\r\n  }\r\n  const handlelowClick = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext)\r\n    props.showAlert(\"Converted to Lowercase\" , \"primary\")\r\n  }\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n  const handleClear = () => {\r\n    setText(\"\")\r\n    props.showAlert(\"Text is cleared\" , \"primary\")\r\n  }\r\n  const handledownload = () => {\r\n    let element = document.createElement(\"a\")\r\n    let area = document.getElementById(\"mybox\").value\r\n    const file = new Blob([area], {\r\n      type: \"text/plain\" \r\n    });\r\n    element.href = URL.createObjectURL(file)\r\n    element.download = \"myfile.txt\"\r\n    document.body.appendChild(element)\r\n    element.click()\r\n    props.showAlert(\"File is downloaded\" , \"primary\")\r\n  }\r\n  const handleCopy = () => {\r\n    let all = document.getElementById(\"mybox\").value\r\n    navigator.clipboard.writeText(all);\r\n    let popup = document.getElementById(\"forpopup\");\r\n    popup.classList.toggle(\"show\");\r\n  }\r\n  const handleSpace = () => {\r\n    let extra = text.split(/[ ]+/)\r\n    setText(extra.join(\" \"))\r\n    props.showAlert(\"Extra spaces are removed\" , \"primary\")\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <h1 style={{ color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black'}}>{props.heading}</h1>\r\n      <div className=\"form-group mt-5\" style={{ color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black' }}>\r\n        <textarea placeholder=\"Enter any text\" className=\"form-control\" style={{ backgroundColor: props.mode === 'dark' ? 'grey' : props.mode === 'danger' ? '#C0392B' : 'white', color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black'}} value={text} onChange={handleOnChange} id=\"mybox\" rows=\"9\"></textarea>\r\n        <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary' && props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handleupClick}>Convert to Uppercase</button>\r\n        <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary' && props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handlelowClick}>Convert to Lowercase</button>\r\n        <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handleClear}>Clear All</button>\r\n        <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download file\" onClick={handledownload}>Download</button>\r\n        <button id='popup' className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy\" onClick={handleCopy}>Copy\r\n          <span className='popuptext' id='forpopup'>Copied!</span>\r\n        </button>\r\n        <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'outline-primary'&& props.mode === 'danger' ? 'danger' : 'outline-primary'} mt-2 ml-2`} onClick={handleSpace}>Remove Extra Spaces</button>\r\n\r\n      </div>\r\n\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : props.mode === 'danger' ? 'white' : 'black' }}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(\" \").filter((t) => t !== \"\").length} words and {text.length} characters </p>\r\n        <p>{0.008 * text.split(\"\").length} minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter in textBox above to preview here\"}</p>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React,{useState}  from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   Routes\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [btntext, setbtntext] = useState(\"Light Mode\")\n  const [buttontext, setbuttontext] = useState(\"Light Mode\")\n  const [alert, setalert] = useState(null)\n  const showAlert = (message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 3000);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark')\n      document.body.style.backgroundColor = '#042743';\n      setbtntext(\"Dark Mode\")\n      showAlert(\"Dark mode enables\", \"light\")\n    }\n    \n    else{\n      setmode('light')\n      setbtntext(\"Light Mode\")\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enables\", \"dark\")\n    }\n  }\n\n  const RedMode=()=>{\n    if(mode==='light'){\n      setmode('danger')\n      document.body.style.backgroundColor = '#C0392B';\n      setbuttontext(\"Red Mode\")\n      showAlert(\"Red mode enables\", \"light\")\n    }\n    \n    else{\n      setmode('light')\n      setbuttontext(\"Light Mode\")\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enables\", \"dark\")\n    }\n  }\n\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Text Changer\" AboutText=\"About Us\" mode={mode} RedMode={RedMode} toggleMode={toggleMode} btntext={btntext} buttontext={buttontext}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n        {/* <Route path='/home'> */}\n      <Textform showAlert={showAlert} heading=\"Enter your text to analyze below\" mode={mode}/>\n      {/* </Route>\n      <Route path='/about'> */}\n      {/* <About/> */}\n      {/* </Route>\n      </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}